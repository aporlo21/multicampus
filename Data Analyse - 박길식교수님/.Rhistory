summarise(imp=Freq*score) %>%
arrange(desc(imp)) %>%
head(11)
g3<-f %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(desc(imp)) %>%
tail(11)
ggplot(data=g1,aes(x=word,y=Freq)) + geom_col()
ggplot(data=g2,aes(x=word,y=imp)) + geom_col()
ggplot(data=g3,aes(x=word,y=imp)) + geom_col()
a1<-tolower(allReviews_K)
a1
b1<-str_replace_all(a1, "[[:punct:]]", "") #단어_특수문자(#@$%^...)_단어
b1
c1<-str_split(b1, " ")
c1
table(unlist(c1))
d1<-as.data.frame(table(unlist(c1)))
d1
library(tidytext) #tidytext형태로 데이터를 구성
e1<-as.data.frame(get_sentiments("afinn"))
e1
d1<-rename(d1, word=Var1)
f1<-inner_join(d1, e1, by="word")
f1
g_1<-f1 %>%
arrange(desc(Freq)) %>%
head(11)
g_2<-f1 %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(desc(imp)) %>%
head(11)
g_3<-f1 %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(desc(imp)) %>%
tail(11)
ggplot(data=g_1,aes(x=word,y=Freq)) + geom_col()
ggplot(data=g_2,aes(x=word,y=imp)) + geom_col()
ggplot(data=g_3,aes(x=word,y=imp)) + geom_col()
a2<-tolower(allReviews_A_1)
a2
b2<-str_replace_all(a2, "[[:punct:]]", "") #단어_특수문자(#@$%^...)_단어
b2
c2<-str_split(b2, " ")
c2
table(unlist(c2))
d2<-as.data.frame(table(unlist(c2)))
d2
library(tidytext) #tidytext형태로 데이터를 구성
e2<-as.data.frame(get_sentiments("afinn"))
e2
d2<-rename(d2, word=Var1)
f2<-inner_join(d2, e2, by="word")
f2
g11<-f2 %>%
arrange(desc(Freq)) %>%
head(11)
g22<-f2 %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(desc(imp)) %>%
head(11)
g33<-f2 %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(desc(imp)) %>%
tail(11)
ggplot(data=g11,aes(x=word,y=Freq)) + geom_col()
ggplot(data=g22,aes(x=word,y=imp)) + geom_col()
ggplot(data=g11,aes(x=word,y=Freq)) + geom_col()
ggplot(data=g22,aes(x=word,y=imp)) + geom_col()
ggplot(data=g11,aes(x=word,y=Freq)) + geom_col()
ggplot(data=g22,aes(x=word,y=imp)) + geom_col()
ggplot(data=g33,aes(x=word,y=imp)) + geom_col()
a3<-tolower(allReviews_K_1)
a3
b3<-str_replace_all(a3, "[[:punct:]]", "") #단어_특수문자(#@$%^...)_단어
b3
c3<-str_split(b3, " ")
c3
table(unlist(c3))
d3<-as.data.frame(table(unlist(c3)))
d3
library(tidytext) #tidytext형태로 데이터를 구성
e3<-as.data.frame(get_sentiments("afinn"))
e3
d3<-rename(d3, word=Var1)
f3<-inner_join(d3, e3, by="word")
f3
g1_1<-f3 %>%
arrange(desc(Freq)) %>%
head(11)
g2_2<-f3 %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(desc(imp)) %>%
head(11)
g3_3<-f3 %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(desc(imp)) %>%
tail(11)
ggplot(data=g1_1,aes(x=word,y=Freq)) + geom_col()
ggplot(data=g2_2,aes(x=word,y=imp)) + geom_col()
ggplot(data=g3_3,aes(x=word,y=imp)) + geom_col()
ggChoropleth(data=korpop1, #지도에 표시할 데이터 #대화형 도시 지도 그리기
aes(fill=pop, #색상별로 표현할변수 #Data Mapping Tool
map_id=code, #지역 기준 변수
tooltip=name),
map=kormap1, #지도
interactive = T #r이 대화형으로 상호작용될때 true가 반환되고 그렇지 않으면 false반환
)# 인터렉티브
str(changeCode(korpop1))
install.packages("devtools")
install_github("cardiomoon/kormaps2014",force=TRUE)
install.packages("ggiraphExtra")
library(devtools) #development tools
library(kormaps2014) #dataset
library(ggiraphExtra)
library(ggplot2) #초기내용을 설정하다
library(dplyr) #data manipulation 문법
str(changeCode(korpop1))
korpop1
korpop1<-rename(korpop1, pop="총인구_명", name="행정구역별_읍면동")
str(changeCode(kormap1))  #주어진 df의 열과 열이름의 한글코드를 바꾼다
ggChoropleth(data=korpop1, #지도에 표시할 데이터 #대화형 도시 지도 그리기
aes(fill=pop, #색상별로 표현할변수 #Data Mapping Tool
map_id=code, #지역 기준 변수
tooltip=name),
map=kormap1, #지도
interactive = T #r이 대화형으로 상호작용될때 true가 반환되고 그렇지 않으면 false반환
)# 인터렉티브
str(changeCode(tbc)) #dataset
ggChoropleth(data=tbc,
aes(fill=NewPts,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
install.packages("plotly") #
#시계열그래프(dygraphs)
install.packages("dygraphs")
library(dygraphs) # 자바 라이브러리를 이용한 대화형 시계열도면에 대한 r인터페이스
str(economics)
tail(economics) #object의 첫째, 마지막 파트를 반환한다.
library(xts)
eco<-xts(economics$unemploy,
order.by = economics$date) # 데이터 정렬
head(eco)
dygraph(eco) %>% # 시계열 데이터에 대한 대화형 플롯
dyRangeSelector() # 대화형 범위 선택 및 zooming
#저축률과 실업자수 간의 상관관계
#여러개의 값표시
eco_a<-xts(economics$psavert,
order.by = economics$date)
eco_b<-xts(economics$unemploy/1000,
order.by = economics$date)
eco_a #저축률
eco_b #실업자수
eco2<-cbind(eco_a, eco_b) #cbind : r object를 행이나 열에 의해 합한다.
str(eco2)
colnames(eco2)<-c("psavert", "unemploy") #행렬 유사객체의 열이름설정 # c : value값을 vector or list에 합
head(eco2)
dygraph(eco2) %>% #시간의 흐름 데이터를 위한 대화형 상자
dyRangeSelector() #주식예측그래프 와 유사(변화추이)
#ggplot의 bar그래프 출력 방식
#1. x축만 지정 => 빈도
#2. x,y축 모두 지정
ggplot(diamonds, aes(cut))+
geom_bar() #종류별 빈도 출력
ggplot(diamonds, aes(cut))+
geom_bar(stat='count') #종류별 빈도 출력 #() : default값은 count로 되어있음 (빈도)
#x,y축 모두 지정하는 방법
sleep
ggplot(sleep, aes(ID, extra, fill=group))+ #aes: 그래프의 틀을 정해주는 함수 #fill_group 색상추가 & 범례구분
geom_bar(stat='identity', position='dodge') #그래프 표현방식 정해주는 함수 #position:색상에 따른 구분 명확
#ggplot의 bar그래프 출력 방식
#1. x축만 지정 => 빈도
#2. x,y축 모두 지정
ggplot(diamonds, aes(cut))+
geom_bar() #종류별 빈도 출력
ggplot(diamonds, aes(cut))+
geom_bar(stat='count') #종류별 빈도 출력 #() : default값은 count로 되어있음 (빈도)
#x,y축 모두 지정하는 방법
sleep
ggplot(sleep, aes(ID, extra, fill=group))+ #aes: 그래프의 틀을 정해주는 함수 #fill_group 색상추가 & 범례구분
geom_bar(stat='identity', position='dodge') #그래프 표현방식 정해주는 함수 #position:색상에 따른 구분 명확
stat='identity'
ggplot(sleep, aes(ID, extra, fill=group))+ #aes: 그래프의 틀을 정해주는 함수 #fill_group 색상추가 & 범례구분
geom_bar(stat='identity', position='dodge')
#stat 어떤통계치를 바탕으로 graph그릴래 함수 #'extra축 데이터 바탕으로 그래프 그리겠다.
# id 1에 해당하는 extra data - 0.7 + 0.9 => 출력
ggplot(diamonds, aes(color, fill=cut))+ #cut column에 대한 누적 막대그래프 출력표시
geom_bar(position='fill')+ # 청록 녹색과 같은 색상구분 여렵 // 비율비교 어렵다. => position='fill' 상대적 비율 확인 가능케함
#=> 다이아몬드 컷팅에 따른 색상비교그래프 // 노란색 비율이 가장 높다.(결론)
coord_flip()
ggplot(sleep, aes(ID, extra, fill=group))+ #aes: 그래프의 틀을 정해주는 함수 #fill_group 색상추가 & 범례구분
geom_bar(stat='identity', position='dodge') #그래프 표현방식 정해주는 함수 #position:색상에 따른 구분 명확
'
com
ggplot(com, aes(word, freq, fill=group))+geom_bar(stat='g_1', position='g_2')
#x,y축 모두 지정하는 방법
sleep
f1
ggplot(f1, aes(word, freq, fill=group))+geom_bar(stat='g_1', position='g_2')
identity
dodge
#x,y축 모두 지정하는 방법
sleep
ggplot(sleep, aes(ID, extra, fill=group))+ #aes: 그래프의 틀을 정해주는 함수 #fill_group 색상추가 & 범례구분
geom_bar(stat='identity', position='dodge') #그래프 표현방식 정해주는 함수 #position:색상에 따른 구분 명확
ggplot(sleep, aes(ID, extra, fill=group))+ #aes: 그래프의 틀을 정해주는 함수 #fill_group 색상추가 & 범례구분
geom_bar(stat='identity', position='dodge') #그래프 표현방식 정해주는 함수 #position:색상에 따른 구분 명확
#stat 어떤통계치를 바탕으로 graph그릴래 함수 #'extra축 데이터 바탕으로 그래프 그리겠다.
# id 1에 해당하는 extra data - 0.7 + 0.9 => 출력
ggplot(diamonds, aes(color, fill=cut))+ #cut column에 대한 누적 막대그래프 출력표시
geom_bar(position='fill')+ # 청록 녹색과 같은 색상구분 여렵 // 비율비교 어렵다. => position='fill' 상대적 비율 확인 가능케함
#=> 다이아몬드 컷팅에 따른 색상비교그래프 // 노란색 비율이 가장 높다.(결론)
coord_flip()
ggplot(sleep, aes(ID, extra, fill=group))+ #aes: 그래프의 틀을 정해주는 함수 #fill_group 색상추가 & 범례구분
geom_bar(stat='identity', position='dodge') #그래프 표현방식 정해주는 함수 #position:색상에 따른 구분 명확
ggplot(sleep, aes(ID, extra, fill=group))+ #aes: 그래프의 틀을 정해주는 함수 #fill_group 색상추가 & 범례구분
geom_bar(stat='identity', position='dodge') #그래프 표현방식 정해주는 함수 #position:색상에 따른 구분 명확
#x,y축 모두 지정하는 방법
sleep
f1
ggplot(data=g_2,aes(x=word,y=imp)) + geom_col()
ggplot(data=g_3,aes(x=word,y=imp)) + geom_col()
ggplot(data=g_1,aes(x=word,y=Freq)) + geom_col()
ggplot(data=f1)
ggplot(data=f1,aes(x=word,y=Freq)) + geom_col()
g_4<-f1 %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(desc(imp))
ggplot(data=g_4,aes(x=word,y=imp)) + geom_col()
g_4
g_3
g_2
rbind(g_2,g_3)
g_5<-rbind(g_2,g_3)
ggplot(data=g_5,aes(x=word,y=imp)) + geom_col()
#figure-창-그래프1 :기본//여러개 그래프 출력도 가능
par() #reset
myPar<-par(mfrow=c(1,2))
plot(Ozone$V8, Ozone$V9 ="a n")
plot(Ozone$V8, Ozone$V9,="b")
ds<-tapply(cars$dist,cars$speed, mean)#두번째 인수가 그룹화기준// #세번째 인수는 평균출력//#dist=distance
plot(ds, xlab = "speed", ylab = "dist", type="o", cex=0.5, lty="dashed")#linetype#추이그래프
#figure-창-그래프1 :기본//여러개 그래프 출력도 가능
par() #reset
myPar<-par(mfrow=c(1,2))
plot(Ozone$V8, Ozone$V9 ="a n")
plot(Ozone$V8, Ozone$V9,="b")
str(economics)
ggplot(data=economics, aes(x=date, y=unemploy))+geom_line()
df<-read.csv("067280.KQ.csv")
df
ggplot(data=df, aes(x=High))+geom_bar()
summary(df)
summary(mpg)
mpg
View(mpg)
g_5
f1
ggplot(data=f1, aes(word, freq, fill=group))+geom_bar(stat='g_1', position='g_2')
ㅎ_5
g_5
ggplot(data=g_5,aes(x=word,y=imp)) + geom_col()
mycorpus <- mytempfunc(mycorpus,"\\b((c|C)o-)","co") #co로 바꿔라
mycorpus <- mytempfunc(mycorpus,"-collar","collar")
mytempfunc<-function(myobject,oldexp,newexp){
newobject<-tm_map(myobject,content_transformer)
function(x,pattern)
gsub(pattern, newexp, x)
}
mycorpus <- mytempfunc(mycorpus,"-collar","collar")
mycorpus <- mytempfunc(mycorpus,"-collar","collar")
f1
f1
g_5<-rbind(g_2,g_3)
g_5
ggplot(data=g_5,aes(x=word,y=imp)) + geom_col()
#3.축,색상
ggplot(data=mpg,aes(x=displ,y=hwy))+ # +지점에서 줄바꿔 끊어준다.
geom_point()+
xlim(0,10)+
ylim(0,50)
b3
table(unlist(b3))
c3
table(unlist(c3))
#1.배경설정
ggplot(data=mpg,aes(x=displ,y=hwy))
#2.그래프
ggplot(data=mpg,aes(x=displ,y=hwy))+geom_point()
#3.축,색상
ggplot(data=mpg,aes(x=displ,y=hwy))+ # +지점에서 줄바꿔 끊어준다.
geom_point()+
xlim(0,10)+
ylim(0,50)
#ggplot():세부조작, 공모전 ppt 깔끔히 그릴때, 최종적 시각화 ggplot사용
#qplot() : 간단 데이터 확인, 작업중 확인용
#bar graph 출력
library(dplyr)
ggplot(data=mydf, aes(x=paper.id,y=pos.sent)) + geom_col()
ggplot(data=mpg, aes(x=drv, y=cty))+
geom_boxplot()
mysentence<-"Learning R is so interesting"
strsplit(mysentence, split=" ")#1인수 분리하고자하는 인수열 , #2인자 - 구분자 #
pal <- brewer.pal(8,"Dark2")
wordcloud(words=df$word,freq=df$freq, min.freq=3, max.word=100,colors=pal)
pal<-brewer.pal(8,"Dark2")
colors=pal
pal<-brewer.pal(8,"Dark2")
wordcloud(words=df$word,freq=df$freq, min.freq=3, max.word=100,colors=pal)
pal<-brewer.pal(8,"Dark2")
wordcloud(words=df$word,freq=df$freq, min.freq=3, max.word=100,colors=pal)
pal<-brewer.pal(8,"Dark2")
pal <- brewer.pal(8,"Dark2")
wordcloud(words=df$word,freq=df$freq, min.freq=3, max.word=100,colors=pal)
ggplot(data=top20, aes(x=word,y=freq))+
ylim(0,2500)+
geom_col()+
scale_x_discrete(limit=order)+
coord_flip()+
geom_text(aes(label=freq), hjust=-0.3)
top20
top20<-dfword %>%
arrange(desc(freq)) %>%
head(20)
text<-rename(text, no=번호,id=계정이름, date=작성일, tw=내용)
text<-read.csv("Data/twitter.csv",header = T,fileEncoding = "UTF-8")
text
str(text)
text<-rename(text, no=번호,id=계정이름, date=작성일, tw=내용)
str(text)
text$tw<-str_replace_all(text$tw,"\\W"," ")
head(text$tw)
nouns<-extractNoun(text$tw)
nouns
table(unlist(nouns))
wordcount<-table(unlist(nouns))
df<-as.data.frame(wordcount, stringsAsFactors = F)
df
str(df)
df<-rename(df, word=Var1, freq=Freq)
df
dfword<-filter(df,nchar(word)>=2)#df에서
str(dfword)
top20<-dfword %>%
arrange(desc(freq)) %>%
head(20)
top20
order<-arrange(top20, freq)$word
ggplot(data=top20, aes(x=word,y=freq))+
ylim(0,2500)+
geom_col()+
scale_x_discrete(limit=order)+
coord_flip()+
geom_text(aes(label=freq), hjust=-0.3)
top20
order<-arrange(top20, freq)$word
ggplot(data=top20, aes(x=word,y=freq))+
ylim(0,2500)+
geom_col()+
scale_x_discrete(limit=order)+
coord_flip()+
geom_text(aes(label=freq), hjust=-0.3)
ggplot(data=g_5, aes(x=word,y=imp))+
ylim(0,2500)+
geom_col()+
scale_x_discrete(limit=order)+
coord_flip()
g_5<-rbind(g_2,g_3)
g_5
ggplot(data=g_5,aes(x=word,y=imp)) + geom_col()
temp <-ggplot(data=g_4,aes(x=word,y=imp),fill=word) + geom_col()
temp + scale_fill_manual(values = c( "#FFFFFF", "#FFCC00", "#FF9900",
"#FF6600", "#FF3300"))
temp <-ggplot(data=g_4,aes(x=word,y=imp)) + geom_col()
temp + scale_fill_manual(values = c( "#FFFFFF", "#FFCC00", "#FF9900",
"#FF6600", "#FF3300"))
temp <-ggplot(data=g_5,aes(x=word,y=imp)) + geom_col()
temp + scale_fill_manual(values = c( "#FFFFFF", "#FFCC00", "#FF9900",
"#FF6600", "#FF3300"))
temp + scale_fill_manual(values = c( "#FFFFFF", "#FFCC00", "#FF9900",
"#FF6600", "#FF3300", "#FFFFFF", "#FFCC00", "#FF9900",
"#FF6600", "#FF3300" ,"#FFFFFF", "#FFCC00", "#FF9900",
"#FF6600", "#FF3300" ,"#FFFFFF", "#FFCC00", "#FF9900",
"#FF6600", "#FF3300", "#FFFFFF", "#FFFFFF"))
library(dplyr)
library(scales)
temp <-ggplot(data=g_5,aes(x=word,y=imp)) + geom_col()
temp + scale_fill_manual(values = c( "#FFFFFF", "#FFCC00", "#FF9900",
"#FF6600", "#FF3300", "#FFFFFF", "#FFCC00", "#FF9900",
"#FF6600", "#FF3300" ,"#FFFFFF", "#FFCC00", "#FF9900",
"#FF6600", "#FF3300" ,"#FFFFFF", "#FFCC00", "#FF9900",
"#FF6600", "#FF3300", "#FFFFFF", "#FFFFFF"))
temp + scale_fill_manual(values=ifelse(imp<0,red,blue) )
temp + scale_fill_manual(values=ifelse(g_5$imp<0,red,blue) )
temp + scale_fill_manual(values=ifelse(g_5$imp<0,"red","blue") )
temp <-ggplot(data=g_5,aes(x=word,y=imp)) + geom_col()
temp + scale_fill_manual(values=ifelse(g_5$imp<0,"red","blue"))
temp <-ggplot(data=g_5,aes(x=word,y=imp)) + geom_bar(stat='identity')
temp <-ggplot(data=g_5,aes(x=word,y=imp),fill=imp) + geom_bar(stat='identity')
temp + scale_fill_manual(values=ifelse(g_5$imp<0,"red","blue"))
temp <-ggplot(data=g_5,aes(x=word,y=imp),fill=imp) + geom_bar(stat='identity')
temp + scale_fill_manual(values=ifelse(g_5$imp<0,"red","blue"))
temp + scale_fill_manual(values=c( "#FFFFFF", "#FFCC00", "#FF9900", "#FF6600", "#FF3300", "#FFFFFF", "#FFCC00", "#FF9900","#FF6600", "#FF3300" ,"#FFFFFF", "#FFCC00", "#FF9900","#FF6600", "#FF3300" ,"#FFFFFF", "#FFCC00", "#FF9900", "#FF6600", "#FF3300", "#FFFFFF", "#FFFFFF"))
test <-union(test,"#FFFFFF")
test <-c()
for(i in 1:22)
temp <-ggplot(data=g_5,aes(x=word,y=imp),fill=imp) + geom_bar(stat='identity')
temp + scale_fill_manual(values=test)
temp <- g_5 %>% ggplot(data=g_5,aes(x=word,y=imp),fill=imp) + geom_bar(stat='identity')
temp + scale_fill_manual(values=test)
temp <- g_5 %>% ggplot(data=g_5,aes(x=word,y=imp)) + geom_bar(stat='identity')
temp <- g_5 %>% ggplot(aes(x=word,y=imp)) + geom_bar(stat='identity')
temp + scale_fill_manual(values=test)
test <-union(test,"red")
temp <- g_5 %>% ggplot(aes(x=word,y=imp)) + geom_bar(stat='identity')
temp + scale_fill_manual(values=test)
library(RColorBrewer)
for(i in 1:22)
test <-union(test,"red")
temp <- g_5 %>% ggplot(aes(x=word,y=imp)) + geom_bar(stat='identity')
temp + scale_fill_manual(values=test)
test <-c()
test <-union(test,"red")
temp <- g_5 %>% ggplot(aes(x=word,y=imp)) + geom_bar(stat='identity')
temp + scale_fill_manual(values=test)
test <-c()
ggplot(data=f1, aes(word, freq, fill="#ffffff"))+geom_bar(stat='g_1', position='g_2')
ggplot(data=f1, aes(word, freq, fill="#ffffff"))+geom_bar(stat='identity', position='g_2')
f1
ggplot(data=g_5,aes(x=word,y=imp)) + geom_col()
g_3<-f1 %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(desc(imp)) %>%
tail(11)
g_3<-f1 %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(desc(imp)) %>%
tail(11)
g_3
g_3<-f1 %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(imp) %>%
tail(11)
g_3
g_3
g_3<-f1 %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(desc(imp)) %>%
tail(11)
g_3
g_3<-f1 %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(desc(imp)) %>%
head(11)
g_3
g_3<-f1 %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(asc(imp)) %>%
tail(11)
g_3<-f1 %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(desc(imp)) %>%
tail(11)
g_3
g_3<-f1 %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(desc(imp)) %>%
tail(25)
g_3
g_3<-f1 %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(desc(imp)) %>%
tail(1)
g_3
g_3<-f1 %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(desc(imp)) %>%
tail(11)
g_3
g_2<-f1 %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(desc(imp)) %>%
head(5)
g_3<-f1 %>%
group_by(word) %>%
summarise(imp=Freq*score) %>%
arrange(desc(imp)) %>%
tail(5)
g_5<-rbind(g_2,g_3)
g_5
ggplot(data=g_5,aes(x=word,y=imp)) + geom_col()
