library(tm)
dtm.k<-DocumentTermMatrix(myNounCorpus)
#length(imsi)
for(i in 1:length(myNounCorpus)){
myNounCorpus[[i]]$content<-
str_replace_all(imsi[[i]]$content,
"커뮤니[[:alpha:]]{1,}",
"커뮤니케이션")
myNounCorpus[[i]]$content<-
str_replace_all(imsi[[i]]$content,
"위키리크스[[:alpha:]]{1,}",
"위키리크스")
}
myNounCorpus[[19]]$content
tm_map(myobject,
content_transformer(function(x,pattern) gsub(pattern,newexp,x)),
oldexp)
mytempfunct<-function(myobject, oldexp, newexp){
tm_map(myobject,
content_transformer(function(x,pattern) gsub(pattern,newexp,x)),
oldexp)
}
mycorpus<-mytempfunct(mycorpus, "-","")
install.packages("RWeka")
library(RWeka)
library(tm)
mytext<-c("The United States comprises fifty states.", "In the United States, each state has its own laws.", "However, federal law overrides state law in the United States.")
mytext
#말뭉치 생성
mytemp<-VCorpus(VectorSource(mytext))
mytemp
ngramtdm
ngram.tdm
ngram.tdm<-TermDocumentMatrix(mytemp)
ngram.tdm
inspect(ngram.tdm)
bigramTokenizer<-function(x)
NGramTokenizer(x, Weka_control(min=2,max=3))
ngram.tdm<-TermDocumentMatrix(mytemp, control=list(tokenize=bigramTokenizer))
str(ngram.tdm)
ngram.tdm$dimnames$Terms
ngram.tdm[,]
bigramlist<-apply(ngram.tdm[,], 1, sum)
sort(bigramlist,decreasing=TRUE)
library(RWeka)
library(tm)
mytext<-c("The United States comprises fifty states.", "In the United States, each state has its own laws.", "However, federal law overrides state law in the United States.")
mytext
#말뭉치 생성
mytemp<-VCorpus(VectorSource(mytext))
x<-c(1,2,3)
install.packages("ggplot2")
library(ggplot2)
x<-c("a","a","b","c")
x
qplot(x)#빈도그래프
mpg
str(mpg)
qplot(data=mpg, x=hwy)
qplot(data=mpg, x=drv,y=hwy)
mpg$drv
qplot(data=mpg, x=drv,y=hwy, geom="line")
qplot(data=mpg, x=drv,y=hwy, geom="boxplot")
qplot(data=mpg, x=drv,y=hwy, geom="boxplot", colour=drv)
value(c(a+b+c),mean)
avg<-(a+b+c)/3
a<-80
b<-90
c<-50
avg<-(a+b+c)/3
avg
s1<-80
s2<-90
s3<-50
avg<-(s1+s2+s3)/3
avg
s<-c(a+b+c)
avg<-s/3
avg
eng<-c(90,100,70,60)
math<-c(50,60,100,9)
class(eng) #파이썬 type을 밝히는것
df<-data.frame(eng)#eng 벡터, 열이 1개인 표
df
df<-data.frame(eng)#eng 벡터, 열이 1개인 표
df
class(df)
df2<-data.frame(eng,math)#eng,math 벡터, 열이 2개인 표
df2
class(df2)
str(df2)
class<-c(1,1,2,3)
df3<-data.frame(eng,math,class)
df3
#eng의 평균 출력
mean(df3$eng)
mean(eng)
df4<-data.frame(eng=c(90,100,70,60),math=c(50,60,100,9),class=c(1,1,2,3)) # <- 연산자 사용x
df4
df5<-data.frame(fruit=c("포도","사과","배"),price=c(1000,2000,500),volume=c(20,10,5))
df5
mean(df5$price)
mean(df5$volume)
install.packages("readxl")
library(readxl)
df<-read_excel("Data/excel_exam.xlsx")
df<-read_excel("Data/excel_exam.xlsx")
df<-read_excel("Data//excel_exam.xlsx")
df<-read_excel("Data/excel_exam.xlsx")
df<-read_excel("rwork/excel_exam.xlsx")
df<-read_excel("Data/excel_exam.xlsx")
df
df2<-read_excel("Data/excel_exam_novar.xlsx",col_names = F)
df<-read_excel("Data/excel_exam.xlsx")
df
mean(df$science)
df<-read_csv("Data/csv_exam.csv")
df
mean(df$science)
df<-read_excel("Data/excel_exam.xlsx")
library(readxl)
df<-read_excel("c:Data/excel_exam.xlsx")
View("Data/excel_exam.xlsx")
View("Data//excel_exam.xlsx")
View("Data//excel_exam.xlsx")
df<-read_excel("Data/excel_exam.xlsx")
View("Data/excel_exam.xlsx")
library(readxl)
View("Data/excel_exam.xlsx")
View("excel_exam.xlsx")
View("Data/excel_exam.xlsx")
df
df
df<-read_excel("Data/excel_exam.xlsx")
View("Data/excel_exam.xlsx")
getwd()
View("Data/excel_exam.xlsx")
library(readxl)
View("Data/excel_exam.xlsx")
df<-read_excel("Data/excel_exam.xlsx")
getwd()
getwd()
View("Data/excel_exam.xlsx")
View("Data/excel_exam.xlsx")
library(readxl)
View("Data/excel_exam.xlsx")
View("Data/excel_exam.xlsx")
library(readxl)
View("Data/excel_exam.xlsx")
df2<-read_excel("Data/excel_exam_novar.xlsx",col_names = F)
df2
df3<-read_excel("Data/excel_exam_sheet.xlsx", sheet=3)
df3
View("Data/excel_exam.xlsx")
View("Data/excel_exam.xlsx")
df<-read_excel("Data/excel_exam.xlsx")
df
View("Data/excel_exam.xlsx")
View(df)
df2<-read_excel("Data/excel_exam_novar.xlsx",col_names = F)
df2<-read_excel("Data/excel_exam_novar.xlsx",col_names = F)
df
View(df)
mean(df$science)
df2<-read_excel("Data/excel_exam_novar.xlsx",col_names = F)
df2
df3<-read_excel("Data/excel_exam_sheet.xlsx", sheet=3)
df3
df4<-read.csv('Data/csv_exam.csv')
df4
str(df4)
df5<-data.frame(a=c(1,2,3),b=c(1,2,3),c=c(1,2,3))
df5
write.csv(df5, file="mydf1.csv")
#파일 용량 작고 빠르게...
save(df5, file="mydf1_s.rda")
rm(df5) #제거
df5
library(readxl)
df<-read_excel("Data/excel_exam.xlsx")
df<-read_excel("Data/excel_exam.xlsx")
df
mean(df$science)
df2<-read_excel("Data/excel_exam_novar.xlsx",col_names = F)
df2
df3<-read_excel("Data/excel_exam_sheet.xlsx", sheet=3)
df3
df4<-read.csv('Data/csv_exam.csv')
df4
str(df4)
df5<-data.frame(a=c(1,2,3),b=c(1,2,3),c=c(1,2,3))
df5
write.csv(df5, file="mydf1.csv")
#파일 용량 작고 빠르게...
save(df5, file="mydf1_s.rda")
rm(df5) #제거
df5
load("mydf1_s.rda") #불러오기
df5
df6<-df5
exam<-read.csv("Data/csv_exam.csv")
exam
head(exam,10)
tail(exam)
View(exam)
str(exam)
dim(exam)
summary(exam)
a<-c(1,2,3,4)
median(a)
class(mpg)
install.packages(mpg)
install.packages("mpg")
class(mpg)
mpg
library(ggplot2)
class(mpg)
head(mpg)
mpg<-as.data.frame(mpg)
str(mpg)
class(mpg)
dim(mpg)
str(mpg)
summary(mpg)
#데이터 변경
df<-data.frame(var1=c(1,2,1),var2=c(2,3,2))
df
df_new <- df #데이터프레임 복사
df_new
library(plyr)
df_new<-rename(df_new, replace = c("var2"="v2"))
df_new
install.packages("dplyr")
library(dplyr)
df_new<-rename(df_new, v1=var1)
df_new
mydf<-data.frame(eng=c(70,80,90),mat=c(50,60,70))
mydf$sum<-mydf$eng+mydf$mat
mydf
mydf$mymean<-mydf$sum/2
mydf
str(mpg)
mpg$tot<-(mpg$cty+mpg$hwy)/2
mpg$tot
head(mpg)
mean(mpg$tot)#tot컬럼 평균
summary(mpg$tot)
#평균연비가(tot) 23이상이면-> gr_h, 미만이면 gr_l
mpg$test<-ifelse(mpg$tot>=23, "gr_h", "gr_l")
#ifelse(조건식, 참, 거짓)
mpg$test
table(mpg$test) #빈도표
qplot(mpg$test)
#tot
#28이상 -> grade:A
#20이상 28미만 -> grade:B
#나머지 -> grade:C
#ifelse(조건,참,ifelse(조건,참,거짓))
mpg$grade<-ifelse(mpg$tot>=28, "A", ifelse(mpg$tot>=20, "B", "C"))
mpg$grade
table(mpg$grade)
exam<-read.csv("Data/csv_exam.csv")
exam
#filter기능:원하는 자료만 추출
exam %>% filter(class==3)
exam %>% filter(class!=3)
exam %>% filter(class!=3 & science>=50)
exam %>% filter(math >=70 | english>=90)
#클래스가 1, 4, 5반 추출
exam %>% filter(class==1 | class==4 | class==5 )
exam %>% filter(class %in% c(1,4,5))
class3<-exam %>% filter(class==3)
mean(class3$english)
str(mpg)
#displ값이 3이하를 추출->mpg3
#displ값이 5이상을 추출->mpg5
#mpg3 hwy평균
#mpg5 hwy평균
mpg3<-mpg %>% filter(displ<=3)
mpg5<-mpg %>% filter(displ>=5)
mean(mpg3$hwy)
mean(mpg5$hwy)
head(mpg$manufacturer,10)
table(mpg$manufacturer)
#volkswagen과 audi중 cty(도시연비)
#가 평균적으로 어디가 더 높은지 출력
mpgv<-mpg %>% filter(manufacturer=="volkswagen")
mpga<-mpg %>% filter(manufacturer=="audi")
mean(mpgv$cty) #20.92
mean(mpga$cty) #17.61
mpgd<-mpg %>% filter(manufacturer %in% c("chevrolet", "hyundai","nissan"))
#컬럼 추출 : select함수
exam %>% select(science)
exam %>% select(science,math,class)
exam %>% select(-science, -math)
#3반 추출 -> math 추출
imsi<-exam %>% filter(class==3)
exam %>%
filter(class==3) %>%
select(math) %>%
head(2)
exam %>% arrange(math)
exam %>% arrange(desc(math))
exam %>% arrange(math, desc(english))
exam %>% arrange(class, science)
mpg
mpg2<-mpg %>% filter($cty, $class)
mpg2<-mpg %>% filter(mpg$cty, mpg$class)
mpg2<-mpg %>% select (cty, class)
mpg2
mpg_suv<-mpg %>% filter(class=="suv")
mpg_compact<- mpg %>% filter(class=="compact")
mean(mpg_suv)
mean(mpg_suv$cty)
mean(mpg_compact$cty)
#3
library(ggplot2)
#3
mpg_audi<-mpg %>% filter(manufacturer=="audi")
head(mpg_audi$hwy)
head(5)
head(mpg_audi$hwy,5)
data.frame(midwest)
total<-midwest$poptotal
total
asian<-midwest$popasian
asian
#6
asian_per_tot<-asian/total
boxplot(asian_per_tot)
mutate(ifelse(avg=<"large", "small"))
#8
table(large,small)
# 2)
mean((mpg %>% filter(class=='suv'))$cty)
mean((mpg %>% filter(class=='compact'))$cty)
mean(mpg_suv$cty)
mean(mpg_compact$cty)
# 3)
mpg %>%
filter(manufacturer == "audi") %>%
select(hwy) %>%
arrange(desc(hwy)) %>%
head(5)
# 4)
library(ggplot2)
#3
mpg_audi<-mpg %>% filter(manufacturer=="audi")
head(mpg_audi$hwy,5)
str(df)
summary(df)
total<-midwest$poptotal
total
asian<-midwest$popasian
asian
f <- rename(df, replace = c("poptotal"="total"))
df <- rename(df, replace = c("popasian"="asian"))
df <- rename(df, replace = c("poptotal"="total"))
# 6)
df$portion = (df$asian/df$total) * 100
midwest <- rename(midwest,total=poptotal)
midwest <- rename(midwest,asian=popasian)
midwest
#6번
midwest$totperasian <- midwest$asian/midwest$total
midwest$totperasian
hist(midwest$totperasian)
hist(midwest$totperasian)
#7번
midwest$Hasian <- ifelse(mean(midwest$totperasian)<midwest$totperasian,"large","small")
midwest$Hasian
#8번
table(midwest$Hasian)
qplot(x=midwest$Hasian)
